[33mcommit 5e86bc825a5df6aee426c9d6a0d8ffc20fe9bdf8[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m)[m
Author: Milos Kocic <miloskocicmiske@gmail.com>
Date:   Sun Apr 18 14:24:17 2021 +0200

    My Project

[1mdiff --git a/.editorconfig b/.editorconfig[m
[1mnew file mode 100644[m
[1mindex 0000000..6537ca4[m
[1m--- /dev/null[m
[1m+++ b/.editorconfig[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mroot = true[m
[32m+[m
[32m+[m[32m[*][m
[32m+[m[32mcharset = utf-8[m
[32m+[m[32mend_of_line = lf[m
[32m+[m[32minsert_final_newline = true[m
[32m+[m[32mindent_style = space[m
[32m+[m[32mindent_size = 4[m
[32m+[m[32mtrim_trailing_whitespace = true[m
[32m+[m
[32m+[m[32m[*.md][m
[32m+[m[32mtrim_trailing_whitespace = false[m
[32m+[m
[32m+[m[32m[*.{yml,yaml}][m
[32m+[m[32mindent_size = 2[m
[1mdiff --git a/.env.example b/.env.example[m
[1mnew file mode 100644[m
[1mindex 0000000..c3ed2a9[m
[1m--- /dev/null[m
[1m+++ b/.env.example[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32mAPP_NAME=Laravel[m
[32m+[m[32mAPP_ENV=local[m
[32m+[m[32mAPP_KEY=[m
[32m+[m[32mAPP_DEBUG=true[m
[32m+[m[32mAPP_URL=http://localhost[m
[32m+[m
[32m+[m[32mLOG_CHANNEL=stack[m
[32m+[m[32mLOG_LEVEL=debug[m
[32m+[m
[32m+[m[32mDB_CONNECTION=mysql[m
[32m+[m[32mDB_HOST=127.0.0.1[m
[32m+[m[32mDB_PORT=3306[m
[32m+[m[32mDB_DATABASE=laravel[m
[32m+[m[32mDB_USERNAME=root[m
[32m+[m[32mDB_PASSWORD=[m
[32m+[m
[32m+[m[32mBROADCAST_DRIVER=log[m
[32m+[m[32mCACHE_DRIVER=file[m
[32m+[m[32mQUEUE_CONNECTION=sync[m
[32m+[m[32mSESSION_DRIVER=file[m
[32m+[m[32mSESSION_LIFETIME=120[m
[32m+[m
[32m+[m[32mMEMCACHED_HOST=127.0.0.1[m
[32m+[m
[32m+[m[32mREDIS_HOST=127.0.0.1[m
[32m+[m[32mREDIS_PASSWORD=null[m
[32m+[m[32mREDIS_PORT=6379[m
[32m+[m
[32m+[m[32mMAIL_MAILER=smtp[m
[32m+[m[32mMAIL_HOST=mailhog[m
[32m+[m[32mMAIL_PORT=1025[m
[32m+[m[32mMAIL_USERNAME=null[m
[32m+[m[32mMAIL_PASSWORD=null[m
[32m+[m[32mMAIL_ENCRYPTION=null[m
[32m+[m[32mMAIL_FROM_ADDRESS=null[m
[32m+[m[32mMAIL_FROM_NAME="${APP_NAME}"[m
[32m+[m
[32m+[m[32mAWS_ACCESS_KEY_ID=[m
[32m+[m[32mAWS_SECRET_ACCESS_KEY=[m
[32m+[m[32mAWS_DEFAULT_REGION=us-east-1[m
[32m+[m[32mAWS_BUCKET=[m
[32m+[m
[32m+[m[32mPUSHER_APP_ID=[m
[32m+[m[32mPUSHER_APP_KEY=[m
[32m+[m[32mPUSHER_APP_SECRET=[m
[32m+[m[32mPUSHER_APP_CLUSTER=mt1[m
[32m+[m
[32m+[m[32mMIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"[m
[32m+[m[32mMIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"[m
[1mdiff --git a/.gitattributes b/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..967315d[m
[1m--- /dev/null[m
[1m+++ b/.gitattributes[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32m* text=auto[m
[32m+[m[32m*.css linguist-vendored[m
[32m+[m[32m*.scss linguist-vendored[m
[32m+[m[32m*.js linguist-vendored[m
[32m+[m[32mCHANGELOG.md export-ignore[m
[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..0ae59f0[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m/node_modules[m
[32m+[m[32m/public/hot[m
[32m+[m[32m/public/storage[m
[32m+[m[32m/storage/*.key[m
[32m+[m[32m/vendor[m
[32m+[m[32m.env[m
[32m+[m[32m.env.backup[m
[32m+[m[32m.phpunit.result.cache[m
[32m+[m[32mdocker-compose.override.yml[m
[32m+[m[32mHomestead.json[m
[32m+[m[32mHomestead.yaml[m
[32m+[m[32mnpm-debug.log[m
[32m+[m[32myarn-error.log[m
[1mdiff --git a/.styleci.yml b/.styleci.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..9231873[m
[1m--- /dev/null[m
[1m+++ b/.styleci.yml[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mphp:[m
[32m+[m[32m  preset: laravel[m
[32m+[m[32m  disabled:[m
[32m+[m[32m    - no_unused_imports[m
[32m+[m[32m  finder:[m
[32m+[m[32m    not-name:[m
[32m+[m[32m      - index.php[m
[32m+[m[32m      - server.php[m
[32m+[m[32mjs:[m
[32m+[m[32m  finder:[m
[32m+[m[32m    not-name:[m
[32m+[m[32m      - webpack.mix.js[m
[32m+[m[32mcss: true[m
[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..e1dcd2e[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1,62 @@[m
[32m+[m[32m<p align="center"><a href="https://laravel.com" target="_blank"><img src="https://raw.githubusercontent.com/laravel/art/master/logo-lockup/5%20SVG/2%20CMYK/1%20Full%20Color/laravel-logolockup-cmyk-red.svg" width="400"></a></p>[m
[32m+[m
[32m+[m[32m<p align="center">[m
[32m+[m[32m<a href="https://travis-ci.org/laravel/framework"><img src="https://travis-ci.org/laravel/framework.svg" alt="Build Status"></a>[m
[32m+[m[32m<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/dt/laravel/framework" alt="Total Downloads"></a>[m
[32m+[m[32m<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/v/laravel/framework" alt="Latest Stable Version"></a>[m
[32m+[m[32m<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/l/laravel/framework" alt="License"></a>[m
[32m+[m[32m</p>[m
[32m+[m
[32m+[m[32m## About Laravel[m
[32m+[m
[32m+[m[32mLaravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling. Laravel takes the pain out of development by easing common tasks used in many web projects, such as:[m
[32m+[m
[32m+[m[32m- [Simple, fast routing engine](https://laravel.com/docs/routing).[m
[32m+[m[32m- [Powerful dependency injection container](https://laravel.com/docs/container).[m
[32m+[m[32m- Multiple back-ends for [session](https://laravel.com/docs/session) and [cache](https://laravel.com/docs/cache) storage.[m
[32m+[m[32m- Expressive, intuitive [database ORM](https://laravel.com/docs/eloquent).[m
[32m+[m[32m- Database agnostic [schema migrations](https://laravel.com/docs/migrations).[m
[32m+[m[32m- [Robust background job processing](https://laravel.com/docs/queues).[m
[32m+[m[32m- [Real-time event broadcasting](https://laravel.com/docs/broadcasting).[m
[32m+[m
[32m+[m[32mLaravel is accessible, powerful, and provides tools required for large, robust applications.[m
[32m+[m
[32m+[m[32m## Learning Laravel[m
[32m+[m
[32m+[m[32mLaravel has the most extensive and thorough [documentation](https://laravel.com/docs) and video tutorial library of all modern web application frameworks, making it a breeze to get started with the framework.[m
[32m+[m
[32m+[m[32mIf you don't feel like reading, [Laracasts](https://laracasts.com) can help. Laracasts contains over 1500 video tutorials on a range of topics including Laravel, modern PHP, unit testing, and JavaScript. Boost your skills by digging into our comprehensive video library.[m
[32m+[m
[32m+[m[32m## Laravel Sponsors[m
[32m+[m
[32m+[m[32mWe would like to extend our thanks to the following sponsors for funding Laravel development. If you are interested in becoming a sponsor, please visit the Laravel [Patreon page](https://patreon.com/taylorotwell).[m
[32m+[m
[32m+[m[32m### Premium Partners[m
[32m+[m
[32m+[m[32m- **[Vehikl](https://vehikl.com/)**[m
[32m+[m[32m- **[Tighten Co.](https://tighten.co)**[m
[32m+[m[32m- **[Kirschbaum Development Group](https://kirschbaumdevelopment.com)**[m
[32m+[m[32m- **[64 Robots](https://64robots.com)**[m
[32m+[m[32m- **[Cubet Techno Labs](https://cubettech.com)**[m
[32m+[m[32m- **[Cyber-Duck](https://cyber-duck.co.uk)**[m
[32m+[m[32m- **[Many](https://www.many.co.uk)**[m
[32m+[m[32m- **[Webdock, Fast VPS Hosting](https://www.webdock.io/en)**[m
[32m+[m[32m- **[DevSquad](https://devsquad.com)**[m
[32m+[m[32m- **[Curotec](https://www.curotec.com/)**[m
[32m+[m[32m- **[OP.GG](https://op.gg)**[m
[32m+[m
[32m+[m[32m## Contributing[m
[32m+[m
[32m+[m[32mThank you for considering contributing to the Laravel framework! The contribution guide can be found in the [Laravel documentation](https://laravel.com/docs/contributions).[m
[32m+[m
[32m+[m[32m## Code of Conduct[m
[32m+[m
[32m+[m[32mIn order to ensure that the Laravel community is welcoming to all, please review and abide by the [Code of Conduct](https://laravel.com/docs/contributions#code-of-conduct).[m
[32m+[m
[32m+[m[32m## Security Vulnerabilities[m
[32m+[m
[32m+[m[32mIf you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell via [taylor@laravel.com](mailto:taylor@laravel.com). All security vulnerabilities will be promptly addressed.[m
[32m+[m
[32m+[m[32m## License[m
[32m+[m
[32m+[m[32mThe Laravel framework is open-sourced software licensed under the [MIT license](https://opensource.org/licenses/MIT).[m
[1mdiff --git a/app/Actions/Fortify/CreateNewUser.php b/app/Actions/Fortify/CreateNewUser.php[m
[1mnew file mode 100644[m
[1mindex 0000000..cc593f3[m
[1m--- /dev/null[m
[1m+++ b/app/Actions/Fortify/CreateNewUser.php[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Actions\Fortify;[m
[32m+[m
[32m+[m[32muse App\Models\User;[m
[32m+[m[32muse Illuminate\Support\Facades\Hash;[m
[32m+[m[32muse Illuminate\Support\Facades\Validator;[m
[32m+[m[32muse Illuminate\Validation\Rule;[m
[32m+[m[32muse Laravel\Fortify\Contracts\CreatesNewUsers;[m
[32m+[m
[32m+[m[32mclass CreateNewUser implements CreatesNewUsers[m
[32m+[m[32m{[m
[32m+[m[32m    use PasswordValidationRules;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate and create a newly registered user.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  array  $input[m
[32m+[m[32m     * @return \App\Models\User[m
[32m+[m[32m     */[m
[32m+[m[32m    public function create(array $input)[m
[32m+[m[32m    {[m
[32m+[m[32m        Validator::make($input, [[m
[32m+[m[32m            'name' => ['required', 'string', 'max:255'],[m
[32m+[m[32m            'email' => [[m
[32m+[m[32m                'required',[m
[32m+[m[32m                'string',[m
[32m+[m[32m                'email',[m
[32m+[m[32m                'max:255',[m
[32m+[m[32m                Rule::unique(User::class),[m
[32m+[m[32m            ],[m
[32m+[m[32m            'password' => $this->passwordRules(),[m
[32m+[m[32m        ])->validate();[m
[32m+[m
[32m+[m[32m        return User::create([[m
[32m+[m[32m            'name' => $input['name'],[m
[32m+[m[32m            'email' => $input['email'],[m
[32m+[m[32m            'password' => Hash::make($input['password']),[m
[32m+[m[32m        ]);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Actions/Fortify/PasswordValidationRules.php b/app/Actions/Fortify/PasswordValidationRules.php[m
[1mnew file mode 100644[m
[1mindex 0000000..78ed8cf[m
[1m--- /dev/null[m
[1m+++ b/app/Actions/Fortify/PasswordValidationRules.php[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Actions\Fortify;[m
[32m+[m
[32m+[m[32muse Laravel\Fortify\Rules\Password;[m
[32m+[m
[32m+[m[32mtrait PasswordValidationRules[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get the validation rules used to validate passwords.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function passwordRules()[m
[32m+[m[32m    {[m
[32m+[m[32m        return ['required', 'string', new Password, 'confirmed'];[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Actions/Fortify/ResetUserPassword.php b/app/Actions/Fortify/ResetUserPassword.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a1e811b[m
[1m--- /dev/null[m
[1m+++ b/app/Actions/Fortify/ResetUserPassword.php[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Actions\Fortify;[m
[32m+[m
[32m+[m[32muse Illuminate\Support\Facades\Hash;[m
[32m+[m[32muse Illuminate\Support\Facades\Validator;[m
[32m+[m[32muse Laravel\Fortify\Contracts\ResetsUserPasswords;[m
[32m+[m
[32m+[m[32mclass ResetUserPassword implements ResetsUserPasswords[m
[32m+[m[32m{[m
[32m+[m[32m    use PasswordValidationRules;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate and reset the user's forgotten password.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  mixed  $user[m
[32m+[m[32m     * @param  array  $input[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function reset($user, array $input)[m
[32m+[m[32m    {[m
[32m+[m[32m        Validator::make($input, [[m
[32m+[m[32m            'password' => $this->passwordRules(),[m
[32m+[m[32m        ])->validate();[m
[32m+[m
[32m+[m[32m        $user->forceFill([[m
[32m+[m[32m            'password' => Hash::make($input['password']),[m
[32m+[m[32m        ])->save();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Actions/Fortify/UpdateUserPassword.php b/app/Actions/Fortify/UpdateUserPassword.php[m
[1mnew file mode 100644[m
[1mindex 0000000..690f324[m
[1m--- /dev/null[m
[1m+++ b/app/Actions/Fortify/UpdateUserPassword.php[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Actions\Fortify;[m
[32m+[m
[32m+[m[32muse Illuminate\Support\Facades\Hash;[m
[32m+[m[32muse Illuminate\Support\Facades\Validator;[m
[32m+[m[32muse Laravel\Fortify\Contracts\UpdatesUserPasswords;[m
[32m+[m
[32m+[m[32mclass UpdateUserPassword implements UpdatesUserPasswords[m
[32m+[m[32m{[m
[32m+[m[32m    use PasswordValidationRules;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate and update the user's password.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  mixed  $user[m
[32m+[m[32m     * @param  array  $input[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function update($user, array $input)[m
[32m+[m[32m    {[m
[32m+[m[32m        Validator::make($input, [[m
[32m+[m[32m            'current_password' => ['required', 'string'],[m
[32m+[m[32m            'password' => $this->passwordRules(),[m
[32m+[m[32m        ])->after(function ($validator) use ($user, $input) {[m
[32m+[m[32m            if (! isset($input['current_password']) || ! Hash::check($input['current_password'], $user->password)) {[m
[32m+[m[32m                $validator->errors()->add('current_password', __('The provided password does not match your current password.'));[m
[32m+[m[32m            }[m
[32m+[m[32m        })->validateWithBag('updatePassword');[m
[32m+[m
[32m+[m[32m        $user->forceFill([[m
[32m+[m[32m            'password' => Hash::make($input['password']),[m
[32m+[m[32m        ])->save();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Actions/Fortify/UpdateUserProfileInformation.php b/app/Actions/Fortify/UpdateUserProfileInformation.php[m
[1mnew file mode 100644[m
[1mindex 0000000..95e84ab[m
[1m--- /dev/null[m
[1m+++ b/app/Actions/Fortify/UpdateUserProfileInformation.php[m
[36m@@ -0,0 +1,61 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Actions\Fortify;[m
[32m+[m
[32m+[m[32muse Illuminate\Contracts\Auth\MustVerifyEmail;[m
[32m+[m[32muse Illuminate\Support\Facades\Validator;[m
[32m+[m[32muse Illuminate\Validation\Rule;[m
[32m+[m[32muse Laravel\Fortify\Contracts\UpdatesUserProfileInformation;[m
[32m+[m
[32m+[m[32mclass UpdateUserProfileInformation implements UpdatesUserProfileInformation[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Validate and update the given user's profile information.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  mixed  $user[m
[32m+[m[32m     * @param  array  $input[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function update($user, array $input)[m
[32m+[m[32m    {[m
[32m+[m[32m        Validator::make($input, [[m
[32m+[m[32m            'name' => ['required', 'string', 'max:255'],[m
[32m+[m
[32m+[m[32m            'email' => [[m
[32m+[m[32m                'required',[m
[32m+[m[32m                'string',[m
[32m+[m[32m                'email',[m
[32m+[m[32m                'max:255',[m
[32m+[m[32m                Rule::unique('users')->ignore($user->id),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ])->validateWithBag('updateProfileInformation');[m
[32m+[m
[32m+[m[32m        if ($input['email'] !== $user->email &&[m
[32m+[m[32m            $user instanceof MustVerifyEmail) {[m
[32m+[m[32m            $this->updateVerifiedUser($user, $input);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $user->forceFill([[m
[32m+[m[32m                'name' => $input['name'],[m
[32m+[m[32m                'email' => $input['email'],[m
[32m+[m[32m            ])->save();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Update the given verified user's profile information.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  mixed  $user[m
[32m+[m[32m     * @param  array  $input[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function updateVerifiedUser($user, array $input)[m
[32m+[m[32m    {[m
[32m+[m[32m        $user->forceFill([[m
[32m+[m[32m            'name' => $input['name'],[m
[32m+[m[32m            'email' => $input['email'],[m
[32m+[m[32m            'email_verified_at' => null,[m
[32m+[m[32m        ])->save();[m
[32m+[m
[32m+[m[32m        $user->sendEmailVerificationNotification();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Console/Kernel.php b/app/Console/Kernel.php[m
[1mnew file mode 100644[m
[1mindex 0000000..69914e9[m
[1m--- /dev/null[m
[1m+++ b/app/Console/Kernel.php[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Console;[m
[32m+[m
[32m+[m[32muse Illuminate\Console\Scheduling\Schedule;[m
[32m+[m[32muse Illuminate\Foundation\Console\Kernel as ConsoleKernel;[m
[32m+[m
[32m+[m[32mclass Kernel extends ConsoleKernel[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The Artisan commands provided by your application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $commands = [[m
[32m+[m[32m        //[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Define the application's command schedule.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Console\Scheduling\Schedule  $schedule[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function schedule(Schedule $schedule)[m
[32m+[m[32m    {[m
[32m+[m[32m        // $schedule->command('inspire')->hourly();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Register the commands for the application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function commands()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->load(__DIR__.'/Commands');[m
[32m+[m
[32m+[m[32m        require base_path('routes/console.php');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Exceptions/Handler.php b/app/Exceptions/Handler.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f9644ad[m
[1m--- /dev/null[m
[1m+++ b/app/Exceptions/Handler.php[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Exceptions;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;[m
[32m+[m[32muse Throwable;[m
[32m+[m
[32m+[m[32mclass Handler extends ExceptionHandler[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A list of the exception types that are not reported.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $dontReport = [[m
[32m+[m[32m        //[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A list of the inputs that are never flashed for validation exceptions.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $dontFlash = [[m
[32m+[m[32m        'password',[m
[32m+[m[32m        'password_confirmation',[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Register the exception handling callbacks for the application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function register()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->reportable(function (Throwable $e) {[m
[32m+[m[32m            //[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/Controller.php b/app/Http/Controllers/Controller.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a0a2a8a[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/Controller.php[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Auth\Access\AuthorizesRequests;[m
[32m+[m[32muse Illuminate\Foundation\Bus\DispatchesJobs;[m
[32m+[m[32muse Illuminate\Foundation\Validation\ValidatesRequests;[m
[32m+[m[32muse Illuminate\Routing\Controller as BaseController;[m
[32m+[m
[32m+[m[32mclass Controller extends BaseController[m
[32m+[m[32m{[m
[32m+[m[32m    use AuthorizesRequests, DispatchesJobs, ValidatesRequests;[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/ProductController.php b/app/Http/Controllers/ProductController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b435402[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/ProductController.php[m
[36m@@ -0,0 +1,102 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32muse Illuminate\Http\Request;[m
[32m+[m[32muse App\Models\Product;[m
[32m+[m[32muse App\Models\Cart;[m
[32m+[m[32muse App\Models\Order;[m
[32m+[m[32muse Illuminate\Support\Facades\Auth;[m
[32m+[m[32muse Illuminate\Support\Facades\DB;[m
[32m+[m
[32m+[m[32mclass ProductController extends Controller[m
[32m+[m[32m{[m
[32m+[m[32m    function index() {[m
[32m+[m[32m        $data=Product::all();[m
[32m+[m
[32m+[m[32m        return view('product', ['products'=>$data]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function detail($id) {[m
[32m+[m[32m        $data=Product::find($id);[m
[32m+[m[32m        return view('detail', ['product'=>$data]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function search(Request $req) {[m
[32m+[m[32m        $data=Product::where('name', 'like', '%'.$req->input('query').'%')->get();[m
[32m+[m[32m        return view('search', ['products'=>$data]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function addToCart(Request $req) {[m
[32m+[m[32m        $userId = Auth::id();[m
[32m+[m[32m        if(Auth::user()) {[m
[32m+[m[32m            $cart=new Cart;[m
[32m+[m[32m            $cart->user_id=$userId;[m
[32m+[m[32m            $cart->product_id=$req->product_id;[m
[32m+[m[32m            $cart->save();[m
[32m+[m[32m            return redirect('/');[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return redirect('/login');[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    static function cartItem() {[m
[32m+[m[32m        $userId = Auth::id();[m
[32m+[m
[32m+[m[32m        return Cart::where('user_id', $userId)->count();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function cartList() {[m
[32m+[m[32m        $userId = Auth::id();[m
[32m+[m[32m        $products=DB::table('cart')[m
[32m+[m[32m        ->join('products', 'cart.product_id', '=', 'products.id')[m
[32m+[m[32m        ->where('cart.user_id', $userId)[m
[32m+[m[32m        ->select('products.*', 'cart.id as cart_id')[m
[32m+[m[32m        ->get();[m
[32m+[m
[32m+[m[32m        return view('cartList', ['products'=>$products]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function removeCart($id) {[m
[32m+[m[32m        Cart::destroy($id);[m
[32m+[m[32m        return redirect('cartlist');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function orderNow() {[m
[32m+[m[32m        $userId = Auth::id();[m
[32m+[m[32m        $total=$products=DB::table('cart')[m
[32m+[m[32m        ->join('products', 'cart.product_id', '=', 'products.id')[m
[32m+[m[32m        ->where('cart.user_id', $userId)[m
[32m+[m[32m        ->sum('products.price');[m
[32m+[m
[32m+[m[32m        return view('ordernow', ['total'=>$total]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function orderPlace(Request $req) {[m
[32m+[m[32m        $userId = Auth::id();[m
[32m+[m[32m        $allCart=Cart::where('user_id', $userId)->get();[m
[32m+[m[32m        foreach($allCart as $cart) {[m
[32m+[m[32m            $order=new Order;[m
[32m+[m[32m            $order->product_id=$cart['product_id'];[m
[32m+[m[32m            $order->user_id=$cart['user_id'];[m
[32m+[m[32m            $order->status="panding";[m
[32m+[m[32m            $order->payment_method=$req->payment;[m
[32m+[m[32m            $order->payment_status="panding";[m
[32m+[m[32m            $order->address=$req->address;[m
[32m+[m[32m            $order->save();[m
[32m+[m[32m            Cart::where('user_id', $userId)->delete();[m
[32m+[m[32m        }[m
[32m+[m[32m        $req->input();[m
[32m+[m[32m        return redirect('/');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    function myOrders() {[m
[32m+[m[32m        $userId = Auth::id();[m
[32m+[m[32m        $orders=DB::table('orders')[m
[32m+[m[32m        ->join('products', 'orders.product_id', '=', 'products.id')[m
[32m+[m[32m        ->where('orders.user_id', $userId)[m
[32m+[m[32m        ->get();[m
[32m+[m
[32m+[m[32m        return view('myorders', ['orders'=>$orders]);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/Http/Kernel.php b/app/Http/Kernel.php[m
[1mnew file mode 100644[m
[1mindex 0000000..30020a5[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Kernel.php[m
[36m@@ -0,0 +1,66 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Http\Kernel as HttpKernel;[m
[32m+[m
[32m+[m[32mclass Kernel extends HttpKernel[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The application's global HTTP middleware stack.[m
[32m+[m[32m     *[m
[32m+[m[32m     * These middleware are run during every request to your application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $middleware = [[m
[32m+[m[32m        // \App\Http\Middleware\TrustHosts::class,[m
[32m+[m[32m        \App\Http\Middleware\TrustProxies::class,[m
[32m+[m[32m        \Fruitcake\Cors\HandleCors::class,[m
[32m+[m[32m        \App\Http\Middleware\PreventRequestsDuringMaintenance::class,[m
[32m+[m[32m        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,[m
[32m+[m[32m        \App\Http\Middleware\TrimStrings::class,[m
[32m+[m[32m        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The application's route middleware groups.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $middlewareGroups = [[m
[32m+[m[32m        'web' => [[m
[32m+[m[32m            \App\Http\Middleware\EncryptCookies::class,[m
[32m+[m[32m            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,[m
[32m+[m[32m            \Illuminate\Session\Middleware\StartSession::class,[m
[32m+[m[32m            // \Illuminate\Session\Middleware\AuthenticateSession::class,[m
[32m+[m[32m            \Illuminate\View\Middleware\ShareErrorsFromSession::class,[m
[32m+[m[32m            \App\Http\Middleware\VerifyCsrfToken::class,[m
[32m+[m[32m            \Illuminate\Routing\Middleware\SubstituteBindings::class,[m
[32m+[m[32m        ],[m
[32m+[m
[32m+[m[32m        'api' => [[m
[32m+[m[32m            'throttle:api',[m
[32m+[m[32m            \Illuminate\Routing\Middleware\SubstituteBindings::class,[m
[32m+[m[32m        ],[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The application's route middleware.[m
[32m+[m[32m     *[m
[32m+[m[32m     * These middleware may be assigned to groups or used individually.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $routeMiddleware = [[m
[32m+[m[32m        'auth' => \App\Http\Middleware\Authenticate::class,[m
[32m+[m[32m        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,[m
[32m+[m[32m        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,[m
[32m+[m[32m        'can' => \Illuminate\Auth\Middleware\Authorize::class,[m
[32m+[m[32m        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,[m
[32m+[m[32m        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,[m
[32m+[m[32m        'signed' => \Illuminate\Routing\Middleware\ValidateSignature::class,[m
[32m+[m[32m        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,[m
[32m+[m[32m        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,[m
[32m+[m[32m    ];[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/Authenticate.php b/app/Http/Middleware/Authenticate.php[m
[1mnew file mode 100644[m
[1mindex 0000000..704089a[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/Authenticate.php[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Auth\Middleware\Authenticate as Middleware;[m
[32m+[m
[32m+[m[32mclass Authenticate extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get the path the user should be redirected to when they are not authenticated.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Http\Request  $request[m
[32m+[m[32m     * @return string|null[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function redirectTo($request)[m
[32m+[m[32m    {[m
[32m+[m[32m        if (! $request->expectsJson()) {[m
[32m+[m[32m            return route('login');[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/EncryptCookies.php b/app/Http/Middleware/EncryptCookies.php[m
[1mnew file mode 100644[m
[1mindex 0000000..033136a[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/EncryptCookies.php[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Cookie\Middleware\EncryptCookies as Middleware;[m
[32m+[m
[32m+[m[32mclass EncryptCookies extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The names of the cookies that should not be encrypted.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $except = [[m
[32m+[m[32m        //[m
[32m+[m[32m    ];[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/PreventRequestsDuringMaintenance.php b/app/Http/Middleware/PreventRequestsDuringMaintenance.php[m
[1mnew file mode 100644[m
[1mindex 0000000..e4956d0[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/PreventRequestsDuringMaintenance.php[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance as Middleware;[m
[32m+[m
[32m+[m[32mclass PreventRequestsDuringMaintenance extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The URIs that should be reachable while maintenance mode is enabled.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $except = [[m
[32m+[m[32m        //[m
[32m+[m[32m    ];[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/RedirectIfAuthenticated.php b/app/Http/Middleware/RedirectIfAuthenticated.php[m
[1mnew file mode 100644[m
[1mindex 0000000..362b48b[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/RedirectIfAuthenticated.php[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse App\Providers\RouteServiceProvider;[m
[32m+[m[32muse Closure;[m
[32m+[m[32muse Illuminate\Http\Request;[m
[32m+[m[32muse Illuminate\Support\Facades\Auth;[m
[32m+[m
[32m+[m[32mclass RedirectIfAuthenticated[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Handle an incoming request.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Http\Request  $request[m
[32m+[m[32m     * @param  \Closure  $next[m
[32m+[m[32m     * @param  string|null  ...$guards[m
[32m+[m[32m     * @return mixed[m
[32m+[m[32m     */[m
[32m+[m[32m    public function handle(Request $request, Closure $next, ...$guards)[m
[32m+[m[32m    {[m
[32m+[m[32m        $guards = empty($guards) ? [null] : $guards;[m
[32m+[m
[32m+[m[32m        foreach ($guards as $guard) {[m
[32m+[m[32m            if (Auth::guard($guard)->check()) {[m
[32m+[m[32m                return redirect(RouteServiceProvider::HOME);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return $next($request);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/TrimStrings.php b/app/Http/Middleware/TrimStrings.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5a50e7b[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/TrimStrings.php[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Http\Middleware\TrimStrings as Middleware;[m
[32m+[m
[32m+[m[32mclass TrimStrings extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The names of the attributes that should not be trimmed.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $except = [[m
[32m+[m[32m        'password',[m
[32m+[m[32m        'password_confirmation',[m
[32m+[m[32m    ];[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/TrustHosts.php b/app/Http/Middleware/TrustHosts.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b0550cf[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/TrustHosts.php[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Http\Middleware\TrustHosts as Middleware;[m
[32m+[m
[32m+[m[32mclass TrustHosts extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get the host patterns that should be trusted.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return array[m
[32m+[m[32m     */[m
[32m+[m[32m    public function hosts()[m
[32m+[m[32m    {[m
[32m+[m[32m        return [[m
[32m+[m[32m            $this->allSubdomainsOfApplicationUrl(),[m
[32m+[m[32m        ];[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/TrustProxies.php b/app/Http/Middleware/TrustProxies.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a3b6aef[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/TrustProxies.php[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Fideloper\Proxy\TrustProxies as Middleware;[m
[32m+[m[32muse Illuminate\Http\Request;[m
[32m+[m
[32m+[m[32mclass TrustProxies extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The trusted proxies for this application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array|string|null[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $proxies;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The headers that should be used to detect proxies.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var int[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $headers = Request::HEADER_X_FORWARDED_FOR | Request::HEADER_X_FORWARDED_HOST | Request::HEADER_X_FORWARDED_PORT | Request::HEADER_X_FORWARDED_PROTO | Request::HEADER_X_FORWARDED_AWS_ELB;[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Middleware/VerifyCsrfToken.php b/app/Http/Middleware/VerifyCsrfToken.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0c13b85[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Middleware/VerifyCsrfToken.php[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Middleware;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Http\Middleware\VerifyCsrfToken as Middleware;[m
[32m+[m
[32m+[m[32mclass VerifyCsrfToken extends Middleware[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The URIs that should be excluded from CSRF verification.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $except = [[m
[32m+[m[32m        //[m
[32m+[m[32m    ];[m
[32m+[m[32m}[m
[1mdiff --git a/app/Models/Cart.php b/app/Models/Cart.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d9021bc[m
[1m--- /dev/null[m
[1m+++ b/app/Models/Cart.php[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Models;[m
[32m+[m
[32m+[m[32muse Illuminate\Database\Eloquent\Factories\HasFactory;[m
[32m+[m[32muse Illuminate\Database\Eloquent\Model;[m
[32m+[m
[32m+[m[32mclass Cart extends Model[m
[32m+[m[32m{[m
[32m+[m[32m    use HasFactory;[m
[32m+[m[32m    public $table="cart";[m
[32m+[m[32m}[m
[1mdiff --git a/app/Models/Order.php b/app/Models/Order.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2163b37[m
[1m--- /dev/null[m
[1m+++ b/app/Models/Order.php[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Models;[m
[32m+[m
[32m+[m[32muse Illuminate\Database\Eloquent\Factories\HasFactory;[m
[32m+[m[32muse Illuminate\Database\Eloquent\Model;[m
[32m+[m
[32m+[m[32mclass Order extends Model[m
[32m+[m[32m{[m
[32m+[m[32m    use HasFactory;[m
[32m+[m[32m    public $timestamps=false;[m
[32m+[m[32m}[m
[1mdiff --git a/app/Models/Product.php b/app/Models/Product.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c428a88[m
[1m--- /dev/null[m
[1m+++ b/app/Models/Product.php[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Models;[m
[32m+[m
[32m+[m[32muse Illuminate\Database\Eloquent\Factories\HasFactory;[m
[32m+[m[32muse Illuminate\Database\Eloquent\Model;[m
[32m+[m
[32m+[m[32mclass Product extends Model[m
[32m+[m[32m{[m
[32m+[m[32m    use HasFactory;[m
[32m+[m[32m}[m
[1mdiff --git a/app/Models/User.php b/app/Models/User.php[m
[1mnew file mode 100644[m
[1mindex 0000000..804799b[m
[1m--- /dev/null[m
[1m+++ b/app/Models/User.php[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Models;[m
[32m+[m
[32m+[m[32muse Illuminate\Contracts\Auth\MustVerifyEmail;[m
[32m+[m[32muse Illuminate\Database\Eloquent\Factories\HasFactory;[m
[32m+[m[32muse Illuminate\Foundation\Auth\User as Authenticatable;[m
[32m+[m[32muse Illuminate\Notifications\Notifiable;[m
[32